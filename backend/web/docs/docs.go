// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/change/project/coordinator": {
            "post": {
                "description": "修改 project coordinator，注意 header 需要 Authorization: Bearer \u003ctoken\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update project coordinator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "修改 coordinator 请求参数",
                        "name": "ChangeProjectCoordinatorRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ChangeProjectCoordinatorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Project Coordinator updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Only admin have permission\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Coordinator not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to update coordinator\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/change/project/tutor": {
            "post": {
                "description": "更新负责这个 project 的 tutor，注意 header 需要 Authorization: Bearer \u003ctoken\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update project tutor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "修改 coordinator 请求参数",
                        "name": "ChangeProjectTutorRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ChangeProjectTutorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Project tutor updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Only admin have permission\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Tutor not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to update tutor\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/coordinator/list": {
            "get": {
                "description": "注意 header  Authorization: Bearer \u003ctoken\u003e, 返回所有 Coordinator 列表， 注意 users 表格里面有 Role 字段（int）， 1表示student, 2表示tutor, 3表示client, 4表示convenor, 5表示admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all coordinator List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"only admin have permission to access\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error, Failed to fetch tutors\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/coordinator/{projectId}": {
            "get": {
                "description": "Get coordinator information by project ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get coordinator information by project ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CoorInfoResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": Invalid projectId}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Coordinator not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/tutor/list": {
            "get": {
                "description": "注意 header  Authorization: Bearer \u003ctoken\u003e, 返回所有 Tutor 列表， 注意 users 表格里面有 Role 字段（int）， 1表示student, 2表示tutor, 3表示client, 4表示convenor, 5表示admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all tutor List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"only admin have permission to access\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch tutors\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/tutor/{projectId}": {
            "get": {
                "description": "Get tutor information by project ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get tutor information by project ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TutorInfoResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": Invalid projectId}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Tutor not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/user/list": {
            "get": {
                "description": "注意 header  Authorization: Bearer \u003ctoken\u003e, 返回所有用户列表， 注意 users 表格里面有 Role 字段（int）， 1表示student, 2表示tutor, 3表示client, 4表示convenor, 5表示admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"only admin have permission\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/modify/user/role": {
            "post": {
                "description": "修改用户的角色信息, 注意header  Authorization: Bearer \u003ctoken\u003e，如果用户离开队伍且队伍没有其他成员，解散队伍并删除",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Modify user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User ID, Role, and Notification",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ModifyUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User role updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login first\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"\"only admin can change user role\"\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notification/clear/all/{userId}": {
            "delete": {
                "description": "Clears all notifications for a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Clear all notifications for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Clear all notifications successfully for the user}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notification/get/all/{userId}": {
            "get": {
                "description": "Retrieves all notifications for a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get all notifications for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.NotificationResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/create": {
            "post": {
                "description": "client 创建一个新的项目并上传文件, this api makes sure only client can create the project",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Clinet create a new project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Field",
                        "name": "field",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Clinet Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Required Skills",
                        "name": "requiredSkills[]",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "upload file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Project created successfully\", \"projectId\": 1, \"fileName\": \"filename.pdf\", \"filePath\": \"backend/files/filename.pdf\", \"createdBy\": 1}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid email\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Client not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to save file\"} or {\"error\": \"Failed to create project\"} or {\"error\": \"Failed to find or create skill\"} or {\"error\": \"Failed to associate skills\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/project/delete/{projectId}": {
            "delete": {
                "description": "根据项目ID删除项目",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\": bool}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/detail/{projectId}": {
            "get": {
                "description": "根据项目ID获取项目的详细信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project detail by projectID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "项目ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProjectDetailResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal Server Error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/get/public_project/list": {
            "get": {
                "description": "is_public 字段 1表示 public， 2 表示未公开, 这里返回的公开的 project 信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get pubilic project list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetProjectListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/modify/{projectId}": {
            "post": {
                "description": "通过 projectId 修改项目详细信息，并更新项目的 client, this api makes sure Projects can only be assigned to clients",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Modify project detail information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Email",
                        "name": "clientEmail",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Required Skills",
                        "name": "requiredSkills[]",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Field",
                        "name": "field",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Specification File",
                        "name": "spec",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ModifyProjectDetailResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"File not provided\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Project can only be assigned to client\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": Internal Error}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/preferencedBy/team/{projectId}": {
            "get": {
                "description": "Get the detail of teams that prefer a given project ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Get teams that prefer a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamDetailResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Teams not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/team/allocated/{projectId}": {
            "get": {
                "description": "查看一个 project 被 allocated 的所有 team 的信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Allocation"
                ],
                "summary": "Get allocated team details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamDetailResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Teams not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/{projectId}/preferencedBy/{teamId}/detail": {
            "get": {
                "description": "Get the details of a team that prefer a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Get project preferred by team detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TeamDetailResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/student/unassigned/list": {
            "get": {
                "description": "返回未分配队伍的学生列表，注意 users 表格里面有 Role 字段，1表示student, 2表示tutor, 3表示client, 4表示convenor, 5表示admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get all students unassigned list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/create": {
            "post": {
                "description": "创建 team, 并且创建人加入了 team, 后端随机生成 teamName, 存入了数据库",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Create a new team",
                "parameters": [
                    {
                        "description": "Create Team form",
                        "name": "createTeamForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateTeamForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateTeamResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"User already belongs to a team, cannot create team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to create team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/list": {
            "get": {
                "description": "Get all teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Team List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/preferences/{userId}": {
            "get": {
                "description": "Get the team preferences for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Get team preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PreferenceResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}\" or {\"error\": \"User does not belong to any team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/student-info/{teamName}": {
            "get": {
                "description": "Get student list information by team name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get student list information by team name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team Name",
                        "name": "teamName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentInfoResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/invite/{userId}/{teamId}": {
            "get": {
                "description": "Invite a student to join a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Invite User to Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User invited to team successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"User already belongs to a team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"} or gin.H{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to invite user to team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/join": {
            "put": {
                "description": "用户加入团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Join a team",
                "parameters": [
                    {
                        "description": "Join Team form",
                        "name": "joinTeamForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.JoinTeamForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JoinTeamResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"User already belongs to a team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/leave/{userId}": {
            "delete": {
                "description": "用户离开团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Leave a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"User has left the team successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"User does not belong to any team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update user\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/preference/project/{userId}": {
            "put": {
                "description": "Update the team preference project for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Update team preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Preferences",
                        "name": "preferences",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PreferenceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated team preferences",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"body error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}\" or \"{\"error\": \"User does not belong to any team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/profile/{userId}": {
            "get": {
                "description": "获取用户所属团队的信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Team Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTeamProfileResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/update/profile/{teamId}": {
            "put": {
                "description": "更新团队的资料和技能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Update Team Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Team Profile form",
                        "name": "updateTeamProfileForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UpdateTeamProfileForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Updated team profile successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update team profile\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/change_password": {
            "post": {
                "description": "修改用户密码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Change Password form",
                        "name": "changePasswordForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ChangePasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Password updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Original passwords do not match\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to connect to user service\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/forget_password/send_email": {
            "post": {
                "description": "发送重置密码邮件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Reset password (send email)",
                "parameters": [
                    {
                        "description": "Reset Password form",
                        "name": "sendEmailResetPwdForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.SendEmailResetPwdForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Reset password email sent successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to send reset password email\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/modify/profile": {
            "post": {
                "description": "更新用户个人信息和技能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "description": "Profile Request",
                        "name": "profileReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"User profile updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update user profile\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/profile/{user_id}": {
            "get": {
                "description": "获取用户个人信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Get User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/pwd_login": {
            "post": {
                "description": "Authenticate user with email and password, Role 1表示student, 2表示tutor, 3表示client, 4表示convenor, 5表示admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login Form",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PasswordLoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"id\": int, \"username\": string, \"token\": string, \"expires_at\": int64}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid credentials. Please check your email and password.\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal server error. Please try again later.\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/register/send_email": {
            "post": {
                "description": "用户注册，发送验证邮件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "User register（send email）",
                "parameters": [
                    {
                        "description": "Register form",
                        "name": "registerForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.RegisterForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Verification email sent successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"User already exists\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to send verification email\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/register/verify": {
            "get": {
                "description": "验证邮箱，并完成用户注册",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "User register (verify email)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Register successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Invalid or expired token\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to verify token\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/reset/password": {
            "post": {
                "description": "重置用户密码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset Password form",
                        "name": "resetPasswordForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ResetPasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Password reset successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Invalid or expired token\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to reset password\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/student/list": {
            "get": {
                "description": "返回所有学生列表， 注意 users 表格里面有 Role 字段， 1表示student, 2表示tutor, 3表示client, 4表示convenor, 5表示admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Get all students List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.ChangePasswordForm": {
            "type": "object",
            "required": [
                "email",
                "new_password",
                "old_password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "forms.ChangeProjectCoordinatorRequest": {
            "type": "object",
            "required": [
                "coorId",
                "notification",
                "projectId"
            ],
            "properties": {
                "coorId": {
                    "type": "integer"
                },
                "notification": {
                    "$ref": "#/definitions/forms.Notification"
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "forms.ChangeProjectTutorRequest": {
            "type": "object",
            "required": [
                "notification",
                "projectId",
                "tutorId"
            ],
            "properties": {
                "notification": {
                    "$ref": "#/definitions/forms.Notification"
                },
                "projectId": {
                    "type": "integer"
                },
                "tutorId": {
                    "type": "integer"
                }
            }
        },
        "forms.CreateTeamForm": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "forms.JoinTeamForm": {
            "type": "object",
            "required": [
                "teamIdShow",
                "userId"
            ],
            "properties": {
                "teamIdShow": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.ModifyUserRoleRequest": {
            "type": "object",
            "required": [
                "notification",
                "role",
                "userId"
            ],
            "properties": {
                "notification": {
                    "$ref": "#/definitions/forms.Notification"
                },
                "role": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.Notification": {
            "type": "object",
            "required": [
                "content",
                "to"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "$ref": "#/definitions/forms.NotificationTo"
                }
            }
        },
        "forms.NotificationTo": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.PasswordLoginForm": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "forms.PreferenceRequest": {
            "type": "object",
            "required": [
                "projectId",
                "reason"
            ],
            "properties": {
                "projectId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "forms.Profile": {
            "type": "object",
            "properties": {
                "avatarBase64": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.ProfileRequest": {
            "type": "object",
            "required": [
                "profile"
            ],
            "properties": {
                "profile": {
                    "$ref": "#/definitions/forms.Profile"
                }
            }
        },
        "forms.RegisterForm": {
            "type": "object",
            "required": [
                "email",
                "password",
                "password_confirm",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "password_confirm": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "forms.ResetPasswordForm": {
            "type": "object",
            "required": [
                "new_password",
                "new_password_confirm",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "new_password_confirm": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "forms.SendEmailResetPwdForm": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "forms.UpdateTeamProfileForm": {
            "type": "object",
            "properties": {
                "TeamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "response.AllocatedTeam": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "response.CoorInfoResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "response.CreateTeamResponse": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "response.GetProjectListResponse": {
            "type": "object",
            "properties": {
                "allocatedTeam": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AllocatedTeam"
                    }
                },
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "clientName": {
                    "type": "string"
                },
                "coorEmail": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "coorName": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "requiredSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "tutorEmail": {
                    "type": "string"
                },
                "tutorId": {
                    "type": "integer"
                },
                "tutorName": {
                    "type": "string"
                }
            }
        },
        "response.GetTeamProfileResponse": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.JoinTeamResponse": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.ModifyProjectDetailResponse": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdByEmail": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.NotificationResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                }
            }
        },
        "response.PreferenceResponse": {
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "integer"
                },
                "projectTitle": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "response.ProfileResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "response.ProjectDetailResponse": {
            "type": "object",
            "properties": {
                "allocatedTeam": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AllocatedTeam"
                    }
                },
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "clientName": {
                    "type": "string"
                },
                "coorEmail": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "coorName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "requiredSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specLink": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tutorEmail": {
                    "type": "string"
                },
                "tutorId": {
                    "type": "integer"
                },
                "tutorName": {
                    "type": "string"
                }
            }
        },
        "response.ProjectTeamMember": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "response.StudentInfoResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.StudentListResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamDetailResponse": {
            "type": "object",
            "properties": {
                "preferenceReason": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ProjectTeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamListResponse": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamMember": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TutorInfoResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "tutorId": {
                    "type": "integer"
                }
            }
        },
        "response.UserListResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
