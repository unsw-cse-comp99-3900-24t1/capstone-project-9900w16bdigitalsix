{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/admin/change/project/coordinator": {
            "post": {
                "description": "change project coordinator， header need Authorization: Bearer \u003ctoken\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update project coordinator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "修改 coordinator 请求参数",
                        "name": "ChangeProjectCoordinatorRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ChangeProjectCoordinatorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Project Coordinator updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Only admin have permission\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Coordinator not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to update coordinator\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/change/project/tutor": {
            "post": {
                "description": "update project 的 tutor， header need Authorization: Bearer \u003ctoken\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update project tutor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "修改 coordinator 请求参数",
                        "name": "ChangeProjectTutorRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ChangeProjectTutorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Project tutor updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Only admin have permission\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Tutor not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to update tutor\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/coordinator/list": {
            "get": {
                "description": "note header  Authorization: Bearer \u003ctoken\u003e, return all Coordinator list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all coordinator List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"only admin have permission to access\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error, Failed to fetch tutors\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/coordinator/{projectId}": {
            "get": {
                "description": "Get coordinator information by project ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get coordinator information by project ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CoorInfoResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": Invalid projectId}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Coordinator not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/tutor/list": {
            "get": {
                "description": "header  Authorization: Bearer \u003ctoken\u003e, get all Tutor list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all tutor List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"only admin have permission to access\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch tutors\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/get/tutor/{projectId}": {
            "get": {
                "description": "Get tutor information by project ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get tutor information by project ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TutorInfoResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": Invalid projectId}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Tutor not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/modify/user/role": {
            "post": {
                "description": "change user role, header  Authorization: Bearer \u003ctoken\u003e，if user leave the team, and team doesn't have member, delete the team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Modify user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User ID, Role, and Notification",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ModifyUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User role updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login first\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"\"only admin can change user role\"\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/channel/{channelId}/messages": {
            "get": {
                "description": "get details of all messages in a specified channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "get messages of a specific channel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Channel ID",
                        "name": "channelId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ChannelMessagesResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"channel not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/create/channel": {
            "post": {
                "description": "private channel or group channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "create channel",
                "parameters": [
                    {
                        "description": "create channel form",
                        "name": "CreateChannelForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateChannelForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"channelID\": \"string\", \"channelName\": \"string\", \"channelType\":1, \"msg\":\"create channel successfully\"}\" or \"{\"channelID\": \"string\", \"channelName\":\"string\", \"channelType\":1, \"msg\": \"private chat channel already exists\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"private chat channel already exists\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/get/all/channels/{userId}": {
            "get": {
                "description": "get details of all channels for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "get all channels for a specific user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AllChannelsResponse"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/invite/to/channel": {
            "post": {
                "description": "invite users to an existing channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "invite people to channel",
                "parameters": [
                    {
                        "description": "invite to channel form",
                        "name": "InviteToChannelForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.InviteToChannelForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"invited to channel successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"channel not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/leave/channel/{channelId}/{userId}": {
            "delete": {
                "description": "remove user from a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "leave channel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Channel ID",
                        "name": "channelId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"left channel successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"channel or user not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/send": {
            "post": {
                "description": "send a message in a specified channel if messageType == 2, messageContent is the format of {\"name\": \"string\", \"email\": \"string\"}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "send message in channel",
                "parameters": [
                    {
                        "description": "send message form",
                        "name": "SendMessageForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.SendMessageForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"message sent successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"channel not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/update/channelName": {
            "post": {
                "description": "update the name of a specified channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "update channel name",
                "parameters": [
                    {
                        "description": "update channel name form",
                        "name": "UpdateChannelNameForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UpdateChannelNameForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"update channel name successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"channel not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/message/{channelId}/users/detail": {
            "get": {
                "description": "get details of all users in a specified channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "get specific channel users detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Channel ID",
                        "name": "channelId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ChannelUsersResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"bad request\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"channel not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notification/clear/all/{userId}": {
            "delete": {
                "description": "Clears all notifications for a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Clear all notifications for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Clear all notifications successfully for the user}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notification/get/all/{userId}": {
            "get": {
                "description": "Retrieves all notifications for a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get all notifications for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.NotificationResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"internal server error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/create/userstory": {
            "post": {
                "description": "Create a new user story for a given team and sprint, User Story Status (1: not started, 2: in progress, 3: completed)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Create user story",
                "parameters": [
                    {
                        "description": "UserStoryReq",
                        "name": "UserStoryReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UserStoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"userStoryId\": 123}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"invalid request body\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/delete/{userStoryId}": {
            "delete": {
                "description": "Delete an existing user story",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Delete user story",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Story ID",
                        "name": "userStoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User story deleted successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User story not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/edit/grade": {
            "post": {
                "description": "Edit the grade and comment of an existing sprint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Edit grade",
                "parameters": [
                    {
                        "description": "Edit Grade",
                        "name": "grade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.EditGradeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Grade updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"invalid request body\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to create sprint\"}\" or \"{\"error\": \"failed to fetch sprint\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/edit/sprint/date": {
            "post": {
                "description": "Edit the start and end dates of an existing sprint，日期格式 RFC3339",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Edit sprint start and end dates",
                "parameters": [
                    {
                        "description": "Sprint Date",
                        "name": "sprint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.EditSprintDateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Sprint dates updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"invalid request body\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Sprint not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/edit/{userStoryId}": {
            "post": {
                "description": "Edit an existing user story, User Story Status (1: not started, 2: in progress, 3: completed)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Edit user story",
                "parameters": [
                    {
                        "description": "UserStoryReq",
                        "name": "UserStoryReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UserStoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User story updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"invalid request body\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User story not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/get/detail/{teamId}": {
            "get": {
                "description": "Get project progress detail for specific team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Get project progress detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProgressDetailResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"invalid team ID\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"no details found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/progress/get/grade/{teamId}": {
            "get": {
                "description": "Get all sprint grades of a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Progress"
                ],
                "summary": "Get all sprint grades of a team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GradeResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"invalid team ID\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"no grades found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/archive/{projectId}": {
            "get": {
                "description": "Set the IsPublic field of the project to 2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Archive the specified project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Project archived\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid project ID\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Unable to update project\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/create": {
            "post": {
                "description": "client create project, this api makes sure only client can create the project",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Clinet create a new project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Field",
                        "name": "field",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Clinet Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Max Team Numbers",
                        "name": "maxTeams",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "description": "Required Skills",
                        "name": "requiredSkills[]",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "upload file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\": \"Project created successfully\", \"projectId\": 1, \"filePath\": \"backend/files/filename.pdf\", \"createdBy\": 1}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid email\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Client not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to save file\"} or {\"error\": \"Failed to create project\"} or {\"error\": \"Failed to find or create skill\"} or {\"error\": \"Failed to associate skills\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/project/delete/{projectId}": {
            "delete": {
                "description": "delete project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\": bool}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/detail/{projectId}": {
            "get": {
                "description": "get project detail by projectID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project detail by projectID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProjectDetailResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal Server Error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/get/archived/list": {
            "get": {
                "description": "Get the details of all projects with IsPublic field set to 2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get all archived projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ProjectDetailResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Unable to retrieve archived projects\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/get/list/byRole/{userId}": {
            "get": {
                "description": "Get a list of the corresponding public projects based on the userID and role. If the user is a student (role == 1), the projects assigned by the team the user belongs to are returned; if the user is a client (role == 3) or a coordinator (role == 4), all the public projects for which they are each responsible are returned.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get public project list by user role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetProjectListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid userId\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"User does not have the required role\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\", \"error\": \"Team not found\", \"error\": \"Project not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal Server Error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/get/public_project/list": {
            "get": {
                "description": "is_public field 1 represent public， 2 represent archived",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get pubilic project list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetProjectListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/modify/{projectId}": {
            "post": {
                "description": "update project detail，update project client, this api makes sure Projects can only be assigned to clients",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Modify project detail information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Email",
                        "name": "clientEmail",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "description": "Required Skills",
                        "name": "requiredSkills",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Field",
                        "name": "field",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Max Team Number",
                        "name": "maxTeams",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Specification File",
                        "name": "spec",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ModifyProjectDetailResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"File not provided\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"Project can only be assigned to client\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": Internal Error}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/preferencedBy/team/{projectId}": {
            "get": {
                "description": "Get the detail of unallocated teams that prefer a given project ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Get  unallocated teams that prefer a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamDetailResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Teams not found\"}\" or \"\"No unallocated teams found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/statistics": {
            "get": {
                "description": "Get total number of students, clients, tutors, coordinators, and top 5 popular project and top 5 popular project field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get statistics of projects and teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.StatisticsResponse"
                        }
                    }
                }
            }
        },
        "/v1/project/team/allocated/{projectId}": {
            "get": {
                "description": "view project 被 allocated 的 all team information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Allocation"
                ],
                "summary": "Get allocated team details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamDetailResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Teams not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/project/{projectId}/preferencedBy/{teamId}/detail": {
            "get": {
                "description": "Get the details of a team that prefer a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Get project preferred by team detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TeamDetailResponse2"
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Project not found\"}\" or \"{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/searach/team/unallocated/list/detail": {
            "post": {
                "description": "Search unallocated team list based on team skills or teamIdShow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search unallocated teams by team name or team skills or teamIdShow",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.SearchUnallocatedTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.SearchTeamResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/search/public/project/{filterString}": {
            "get": {
                "description": "Search for public projects by title or field, fuzzy matching, and support for similarity thresholds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search public projects by title or field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "过滤字符串",
                        "name": "filterString",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetProjectListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid filter string\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal Server Error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/search/team/unallocated/preferenceProject/list/detail": {
            "post": {
                "description": "Search unallocated teams that preference a paticular project by team skills or teamIdShow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search unallocated teams that preference a paticular project by team skills or teamIdShow",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.SearchTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ProjectSearchTeamResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/student/unassigned/list": {
            "get": {
                "description": "Get all students unassigned list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get all students unassigned list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/student/unassigned/list/{course}": {
            "get": {
                "description": "Return a list of unassigned students, note that the Role field in the users table, 1 represents student, 2 represents tutor, 3 represents client, 4 represents convenor, 5 represents admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get all unassigned students list by course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course",
                        "name": "course",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch students\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/create": {
            "post": {
                "description": "create team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Create a new team",
                "parameters": [
                    {
                        "description": "Create Team form",
                        "name": "createTeamForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateTeamForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateTeamResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"User already belongs to a team, cannot create team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to create team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/list": {
            "get": {
                "description": "Get all teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Team List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/list/{course}": {
            "get": {
                "description": "Get all teams for a specific course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Team List By Course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course",
                        "name": "course",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/preferences/{userId}": {
            "get": {
                "description": "Get the team preferences for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Get team preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PreferenceResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}\" or {\"error\": \"User does not belong to any team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/student-info/{teamName}": {
            "get": {
                "description": "Get student list information by team name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get student list information by team name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team Name",
                        "name": "teamName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentInfoResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/unallocated/list": {
            "get": {
                "description": "Get all unallocated teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Unallocated Team List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/get/unallocated/list/{course}": {
            "get": {
                "description": "Get all unallocated teams for a specific course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Unallocated Team List By Course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course",
                        "name": "course",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TeamListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch teams\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/invite/{userId}/{teamId}": {
            "get": {
                "description": "Invite a student to join a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Invite User to Team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"User invited to team successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"User already belongs to a team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"} or gin.H{\"error\": \"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"Course mismatch\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to invite user to team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/join": {
            "put": {
                "description": "User join a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Join a team",
                "parameters": [
                    {
                        "description": "Join Team form",
                        "name": "joinTeamForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.JoinTeamForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JoinTeamResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"Course mismatch\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/leave/{userId}": {
            "delete": {
                "description": "student leave a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Leave a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"User has left the team successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"User does not belong to any team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update user\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/preference/project/{userId}": {
            "put": {
                "description": "Update the team preference project for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Preference"
                ],
                "summary": "Update team preferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Preferences",
                        "name": "preferences",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/forms.PreferenceRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated team preferences",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"body error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}\" or \"{\"error\": \"User does not belong to any team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"Team already allocated a project, cannot update preferences\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to retrieve team\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/profile/{userId}": {
            "get": {
                "description": "get team profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get Team Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTeamProfileResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/project/allocation": {
            "put": {
                "description": "Allocate a project to a team and send notification to team members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Allocation"
                ],
                "summary": "Agree to allocate a Project to a Team",
                "parameters": [
                    {
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Notification Content and To",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.TeamNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Project allocated and notification sent successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Team not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/project/reject": {
            "put": {
                "description": "Reject a team allocation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Allocation"
                ],
                "summary": "Reject a team allocation",
                "parameters": [
                    {
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Notification Content and To",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.TeamNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Allocation canceled and notification sent successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Team not found or not allocated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/team/update/profile/{teamId}": {
            "put": {
                "description": "update team profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Update Team Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Team Profile form",
                        "name": "updateTeamProfileForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UpdateTeamProfileForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Updated team profile successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"Team not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update team profile\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/change_password": {
            "post": {
                "description": "change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Change Password form",
                        "name": "changePasswordForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ChangePasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Password updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Original passwords do not match\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to connect to user service\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/forget_password/send_email": {
            "post": {
                "description": "send reset password email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Reset password (send email)",
                "parameters": [
                    {
                        "description": "Reset Password form",
                        "name": "sendEmailResetPwdForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.SendEmailResetPwdForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Reset password email sent successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to send reset password email\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/get/user/list": {
            "get": {
                "description": "Role field（int）， 1 represent student, 2 represent tutor, 3 represent client, 4 represent convenor, 5 represent admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "{\"error\": \"Please login\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "{\"error\": \"only admin have permission\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/modify/profile": {
            "post": {
                "description": "update user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "description": "Profile Request",
                        "name": "profileReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"User profile updated successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to update user profile\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/profile/{user_id}": {
            "get": {
                "description": "Get User Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Get User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileResponse"
                        }
                    },
                    "404": {
                        "description": "{\"error\":\"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/pwd_login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login Form",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PasswordLoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"id\": int, \"username\": string, \"token\": string, \"expires_at\": int64}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"Invalid credentials. Please check your email and password.\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"error\": \"User not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Internal server error. Please try again later.\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/register/send_email": {
            "post": {
                "description": "user register, send email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "User register（send email）",
                "parameters": [
                    {
                        "description": "Register form",
                        "name": "registerForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.RegisterForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Verification email sent successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Validation failed\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "{\"error\": \"User already exists\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to send verification email\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/register/verify": {
            "get": {
                "description": "verify email and complete register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "User register (verify email)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Register successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Invalid or expired token\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to verify token\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/reset/password": {
            "post": {
                "description": "reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Management"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset Password form",
                        "name": "resetPasswordForm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ResetPasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"Password reset successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error\":\"Invalid or expired token\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\":\"Failed to reset password\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/same/course/student/list/{userId}": {
            "get": {
                "description": "Get all students who have the same course as the user and are not in any team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get all students have the same course doesn't join the team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/student/list": {
            "get": {
                "description": "get all student list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get all students List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.StudentListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"Failed to fetch users\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.ChangePasswordForm": {
            "type": "object",
            "required": [
                "email",
                "new_password",
                "old_password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "forms.ChangeProjectCoordinatorRequest": {
            "type": "object",
            "required": [
                "coorId",
                "notification",
                "projectId"
            ],
            "properties": {
                "coorId": {
                    "type": "integer"
                },
                "notification": {
                    "$ref": "#/definitions/forms.Notification"
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "forms.ChangeProjectTutorRequest": {
            "type": "object",
            "required": [
                "notification",
                "projectId",
                "tutorId"
            ],
            "properties": {
                "notification": {
                    "$ref": "#/definitions/forms.Notification"
                },
                "projectId": {
                    "type": "integer"
                },
                "tutorId": {
                    "type": "integer"
                }
            }
        },
        "forms.CreateChannelForm": {
            "type": "object",
            "required": [
                "channelType",
                "userId"
            ],
            "properties": {
                "channelType": {
                    "type": "integer"
                },
                "userId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.CreateTeamForm": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "forms.EditGradeReq": {
            "type": "object",
            "required": [
                "sprints",
                "teamId"
            ],
            "properties": {
                "notification": {
                    "$ref": "#/definitions/forms.TeamNotification"
                },
                "sprints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/forms.EditSprintGrade"
                    }
                },
                "teamId": {
                    "type": "integer"
                }
            }
        },
        "forms.EditSprintDateReq": {
            "type": "object",
            "required": [
                "endDate",
                "sprintNum",
                "startDate",
                "teamId"
            ],
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "sprintNum": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                }
            }
        },
        "forms.EditSprintGrade": {
            "type": "object",
            "required": [
                "comment",
                "grade",
                "sprintNum"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "grade": {
                    "type": "integer"
                },
                "sprintNum": {
                    "type": "integer"
                }
            }
        },
        "forms.InviteToChannelForm": {
            "type": "object",
            "required": [
                "channelId",
                "userId"
            ],
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.JoinTeamForm": {
            "type": "object",
            "required": [
                "teamIdShow",
                "userId"
            ],
            "properties": {
                "teamIdShow": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.ModifyUserRoleRequest": {
            "type": "object",
            "required": [
                "notification",
                "role",
                "userId"
            ],
            "properties": {
                "notification": {
                    "$ref": "#/definitions/forms.Notification"
                },
                "role": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.Notification": {
            "type": "object",
            "required": [
                "content",
                "to"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "$ref": "#/definitions/forms.NotificationTo"
                }
            }
        },
        "forms.Notification2": {
            "type": "object",
            "required": [
                "content",
                "to"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.NotificationTo": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.NotificationToTeam": {
            "type": "object",
            "required": [
                "teamId"
            ],
            "properties": {
                "teamId": {
                    "type": "integer"
                }
            }
        },
        "forms.PasswordLoginForm": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "forms.PreferenceRequest": {
            "type": "object",
            "required": [
                "projectId"
            ],
            "properties": {
                "projectId": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "forms.Profile": {
            "type": "object",
            "properties": {
                "avatarBase64": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "course": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.ProfileRequest": {
            "type": "object",
            "required": [
                "profile"
            ],
            "properties": {
                "profile": {
                    "$ref": "#/definitions/forms.Profile"
                }
            }
        },
        "forms.RegisterForm": {
            "type": "object",
            "required": [
                "course",
                "email",
                "password",
                "password_confirm",
                "username"
            ],
            "properties": {
                "course": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "password_confirm": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "forms.ResetPasswordForm": {
            "type": "object",
            "required": [
                "new_password",
                "new_password_confirm",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "new_password_confirm": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "forms.SearchTeamRequest": {
            "type": "object",
            "required": [
                "projectId",
                "searchList"
            ],
            "properties": {
                "projectId": {
                    "type": "integer"
                },
                "searchList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "forms.SearchUnallocatedTeamRequest": {
            "type": "object",
            "required": [
                "searchList"
            ],
            "properties": {
                "searchList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "forms.SendEmailResetPwdForm": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "forms.SendMessageForm": {
            "type": "object",
            "required": [
                "SenderId",
                "channelId",
                "messageContent",
                "messageType",
                "notification"
            ],
            "properties": {
                "SenderId": {
                    "type": "integer"
                },
                "channelId": {
                    "type": "integer"
                },
                "messageContent": {},
                "messageType": {
                    "type": "integer"
                },
                "notification": {
                    "$ref": "#/definitions/forms.Notification2"
                }
            }
        },
        "forms.TeamNotification": {
            "type": "object",
            "required": [
                "content",
                "to"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "$ref": "#/definitions/forms.NotificationToTeam"
                }
            }
        },
        "forms.UpdateChannelNameForm": {
            "type": "object",
            "required": [
                "ChannelName",
                "channelId"
            ],
            "properties": {
                "ChannelName": {
                    "type": "string"
                },
                "channelId": {
                    "type": "integer"
                }
            }
        },
        "forms.UpdateTeamProfileForm": {
            "type": "object",
            "properties": {
                "TeamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "forms.UserStoryReq": {
            "type": "object",
            "required": [
                "sprintNum",
                "teamId",
                "userStoryDescription",
                "userStoryStatus"
            ],
            "properties": {
                "sprintNum": {
                    "type": "integer"
                },
                "teamId": {
                    "type": "integer"
                },
                "userStoryDescription": {
                    "type": "string"
                },
                "userStoryStatus": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                }
            }
        },
        "response.AllChannelsResponse": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ChannelDetail"
                    }
                }
            }
        },
        "response.AllocatedTeam": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "response.ChannelDetail": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "integer"
                },
                "channelName": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "response.ChannelMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.MessageDetail"
                    }
                }
            }
        },
        "response.ChannelUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserDetail"
                    }
                }
            }
        },
        "response.CoorInfoResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "response.CreateTeamResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                }
            }
        },
        "response.FieldStatistic": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "projects": {
                    "type": "integer"
                },
                "teams": {
                    "type": "integer"
                }
            }
        },
        "response.GetProjectListResponse": {
            "type": "object",
            "properties": {
                "allocatedTeam": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AllocatedTeam"
                    }
                },
                "clientAvatar": {
                    "type": "string"
                },
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "clientName": {
                    "type": "string"
                },
                "coorEmail": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "coorName": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "maxTeams": {
                    "type": "integer"
                },
                "projectId": {
                    "type": "integer"
                },
                "requiredSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "tutorEmail": {
                    "type": "string"
                },
                "tutorId": {
                    "type": "integer"
                },
                "tutorName": {
                    "type": "string"
                }
            }
        },
        "response.GetTeamProfileResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GradeResponse": {
            "type": "object",
            "properties": {
                "sprints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SprintGrade"
                    }
                }
            }
        },
        "response.JoinTeamResponse": {
            "type": "object",
            "properties": {
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.MessageContent": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.MessageDetail": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "messageContent": {
                    "$ref": "#/definitions/response.MessageContent"
                },
                "messageTime": {
                    "type": "string"
                },
                "messageType": {
                    "type": "integer"
                },
                "senderName": {
                    "type": "string"
                }
            }
        },
        "response.ModifyProjectDetailResponse": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdByEmail": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.NotificationResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.PreferenceResponse": {
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "integer"
                },
                "projectTitle": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "response.ProfileResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "course": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "response.ProgressDetailResponse": {
            "type": "object",
            "properties": {
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "clientName": {
                    "type": "string"
                },
                "coorEmail": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "coorName": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "sprints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SprintDetail"
                    }
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tutorEmail": {
                    "type": "string"
                },
                "tutorId": {
                    "type": "integer"
                },
                "tutorName": {
                    "type": "string"
                }
            }
        },
        "response.ProjectDetailResponse": {
            "type": "object",
            "properties": {
                "allocatedTeam": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AllocatedTeam"
                    }
                },
                "clientAvatarURL": {
                    "type": "string"
                },
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "integer"
                },
                "clientName": {
                    "type": "string"
                },
                "coorEmail": {
                    "type": "string"
                },
                "coorId": {
                    "type": "integer"
                },
                "coorName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "maxTeams": {
                    "type": "integer"
                },
                "projectId": {
                    "type": "integer"
                },
                "requiredSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specLink": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tutorEmail": {
                    "type": "string"
                },
                "tutorId": {
                    "type": "integer"
                },
                "tutorName": {
                    "type": "string"
                }
            }
        },
        "response.ProjectSearchTeamResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "preferenceNum": {
                    "type": "integer"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember2"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.ProjectStatistic": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "teams": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.ProjectTeamMember": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.SearchTeamResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember2"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.SprintDetail": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "sprintComment": {
                    "type": "string"
                },
                "sprintGrade": {
                    "type": "integer"
                },
                "sprintNum": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "userStoryList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserStoryDetail"
                    }
                }
            }
        },
        "response.SprintGrade": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "grade": {
                    "type": "integer"
                },
                "sprintNum": {
                    "type": "integer"
                }
            }
        },
        "response.StatisticsResponse": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FieldStatistic"
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ProjectStatistic"
                    }
                },
                "totalClients": {
                    "type": "integer"
                },
                "totalCoordinators": {
                    "type": "integer"
                },
                "totalStudents": {
                    "type": "integer"
                },
                "totalTutors": {
                    "type": "integer"
                }
            }
        },
        "response.StudentInfoResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "course": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.StudentListResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "course": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamDetailResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "preferenceNum": {
                    "type": "integer"
                },
                "preferenceReason": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeamMember3"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamDetailResponse2": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "preferenceNum": {
                    "type": "integer"
                },
                "preferenceReason": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamMember": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ProjectTeamMember"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamListResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "string"
                },
                "teamId": {
                    "type": "integer"
                },
                "teamIdShow": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                },
                "teamSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamMember": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "course": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.TeamMember2": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "response.TeamMember3": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "response.TutorInfoResponse": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "tutorId": {
                    "type": "integer"
                }
            }
        },
        "response.UserDetail": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "userCourse": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.UserListResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "response.UserStoryDetail": {
            "type": "object",
            "properties": {
                "userStoryDescription": {
                    "type": "string"
                },
                "userStoryId": {
                    "type": "integer"
                },
                "userStoryStatus": {
                    "type": "integer"
                }
            }
        }
    }
}